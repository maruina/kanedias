{% from 'dkim/map.jinja' import dkim with context %}

# This is a basic configuration that can easily be adapted to suit a standard
# installation. For more advanced options, see opendkim.conf(5) and/or
# /usr/share/doc/opendkim/examples/opendkim.conf.sample.

# Log to syslog
Syslog			yes
SyslogSuccess   yes
LogWhy          yes

# Required to use local socket with MTAs that access the socket as a non-
# privileged user (e.g. Postfix)
UMask			002

# Sign for example.com with key in /etc/mail/dkim.key using
# selector '2007' (e.g. 2007._domainkey.example.com)
#Domain			example.com
#KeyFile		/etc/mail/dkim.key
#Selector		2007

# Commonly-used options; the commented-out versions show the defaults.
#Canonicalization	simple
#Mode			sv
#SubDomains		no
#ADSPDiscard		no

# Always oversign From (sign using actual From and a null From to prevent
# malicious signatures header fields (From and/or others) between the signer
# and the verifier.  From is oversigned by default in the Debian pacakge
# because it is often the identity key used by reputation systems and thus
# somewhat security sensitive.
OversignHeaders		From

# List domains to use for RFC 6541 DKIM Authorized Third-Party Signatures
# (ATPS) (experimental)

#ATPSDomains		example.com

AutoRestart         yes
AutoRestartRate     10/1h

Canonicalization    relaxed/simple

ExternalIgnoreList  refile:{{ dkim.lookup.conf_dir }}/TrustedHosts
InternalHosts       refile:{{ dkim.lookup.conf_dir }}/TrustedHosts
KeyTable            refile:{{ dkim.lookup.conf_dir }}/KeyTable
SigningTable        refile:{{ dkim.lookup.conf_dir }}/SigningTable

Mode                    sv
PidFile                 /var/run/opendkim/opendkim.pid
SignatureAlgorithm      rsa-sha256

UserID                  opendkim:opendkim

{% if 'tcp' in salt['pillar.get']('dkim:socket:type') %}
Socket              inet:{{ salt['pillar.get']('dkim:socket:port') }}@{{ salt['pillar.get']('dkim:socket:host') }}
{% elif 'unix' in salt['pillar.get']('dkim:socket:type') %}
Socket              local:{{ salt['pillar.get']('dkim:socket:file') }}
{% endif %}
